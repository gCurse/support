diff --git a/bin/otrverwaltung b/bin/otrverwaltung
index e9926f9..d43c6a5 100755
--- a/bin/otrverwaltung
+++ b/bin/otrverwaltung
@@ -156,6 +156,7 @@ class App:
                 'cutinterface_resolution_x': 800,
                 'cutinterface_resolution_y': 450,
                 'seek_distance_default': 2000,
+                'videosink': 'Standard',
                 'cutinterface_hide_cuts': False,
                 'mplayer_fullscreen': True,
                 'prefer_mpv': False,
diff --git a/data/ui/PreferencesWindow.glade b/data/ui/PreferencesWindow.glade
index d62556a..bb9de72 100644
--- a/data/ui/PreferencesWindow.glade
+++ b/data/ui/PreferencesWindow.glade
@@ -1663,30 +1663,6 @@ Die Namen der Programme müssen überprüft werden!&lt;/i&gt;</property>
                         <property name="top_attach">0</property>
                       </packing>
                     </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
-                    <child>
-                      <placeholder/>
-                    </child>
                   </object>
                   <packing>
                     <property name="expand">False</property>
@@ -1816,47 +1792,24 @@ Die Namen der Programme müssen überprüft werden!&lt;/i&gt;</property>
                         <property name="top_attach">0</property>
                       </packing>
                     </child>
-                    <child>
-                      <object class="GtkLabel" id="labelMoviewindowY">
-                        <property name="visible">True</property>
-                        <property name="can_focus">False</property>
-                        <property name="halign">start</property>
-                        <property name="label" translatable="yes">Höhe des Videofensters in Pixels:</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">3</property>
-                      </packing>
-                    </child>
                     <child>
                       <object class="GtkLabel" id="labelMoviewindowX">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
                         <property name="halign">start</property>
+                        <property name="margin_top">30</property>
                         <property name="label" translatable="yes">Breite des Videofensters in Pixels:</property>
                       </object>
                       <packing>
                         <property name="left_attach">0</property>
-                        <property name="top_attach">2</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <object class="GtkSpinButton" id="spinbuttonY">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="xalign">1</property>
-                        <property name="adjustment">moviewindowAdjustmentY</property>
-                        <property name="value">450</property>
-                      </object>
-                      <packing>
-                        <property name="left_attach">1</property>
-                        <property name="top_attach">3</property>
+                        <property name="top_attach">1</property>
                       </packing>
                     </child>
                     <child>
                       <object class="GtkSpinButton" id="spinbuttonX">
                         <property name="visible">True</property>
                         <property name="can_focus">True</property>
+                        <property name="margin_top">30</property>
                         <property name="xalign">1</property>
                         <property name="input_purpose">number</property>
                         <property name="adjustment">moviewindowAdjustmentX</property>
@@ -1866,39 +1819,44 @@ Die Namen der Programme müssen überprüft werden!&lt;/i&gt;</property>
                       </object>
                       <packing>
                         <property name="left_attach">1</property>
-                        <property name="top_attach">2</property>
+                        <property name="top_attach">1</property>
                       </packing>
                     </child>
                     <child>
-                      <object class="GtkLabel" id="labelForSpacing">
+                      <object class="GtkLabel" id="labelMoviewindowY">
                         <property name="visible">True</property>
-                        <property name="sensitive">False</property>
                         <property name="can_focus">False</property>
+                        <property name="halign">start</property>
+                        <property name="label" translatable="yes">Höhe des Videofensters in Pixels:</property>
                       </object>
                       <packing>
                         <property name="left_attach">0</property>
-                        <property name="top_attach">1</property>
+                        <property name="top_attach">2</property>
                       </packing>
                     </child>
                     <child>
-                      <object class="GtkLabel" id="labelForSpacing2">
+                      <object class="GtkSpinButton" id="spinbuttonY">
                         <property name="visible">True</property>
-                        <property name="can_focus">False</property>
+                        <property name="can_focus">True</property>
+                        <property name="xalign">1</property>
+                        <property name="adjustment">moviewindowAdjustmentY</property>
+                        <property name="value">450</property>
                       </object>
                       <packing>
-                        <property name="left_attach">0</property>
-                        <property name="top_attach">4</property>
+                        <property name="left_attach">1</property>
+                        <property name="top_attach">2</property>
                       </packing>
                     </child>
                     <child>
                       <object class="GtkLabel" id="lbl_time_frame">
                         <property name="visible">True</property>
                         <property name="can_focus">False</property>
+                        <property name="margin_top">30</property>
                         <property name="label" translatable="yes">Alternative Zeit &lt;-&gt; Frame Umwandlung:</property>
                       </object>
                       <packing>
                         <property name="left_attach">0</property>
-                        <property name="top_attach">5</property>
+                        <property name="top_attach">3</property>
                       </packing>
                     </child>
                     <child>
@@ -1906,18 +1864,42 @@ Die Namen der Programme müssen überprüft werden!&lt;/i&gt;</property>
                         <property name="visible">True</property>
                         <property name="can_focus">True</property>
                         <property name="receives_default">False</property>
+                        <property name="margin_top">30</property>
                         <property name="draw_indicator">True</property>
                       </object>
                       <packing>
                         <property name="left_attach">1</property>
-                        <property name="top_attach">5</property>
+                        <property name="top_attach">3</property>
                       </packing>
                     </child>
                     <child>
-                      <placeholder/>
+                      <object class="GtkLabel" id="label_videosink">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="margin_top">30</property>
+                        <property name="label" translatable="yes">Videosink für playbin:</property>
+                        <property name="xalign">0</property>
+                      </object>
+                      <packing>
+                        <property name="left_attach">0</property>
+                        <property name="top_attach">4</property>
+                      </packing>
                     </child>
                     <child>
-                      <placeholder/>
+                      <object class="GtkComboBoxText" id="combo_videosink">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="margin_top">30</property>
+                        <items>
+                          <item id="Standard" translatable="yes">Standard</item>
+                          <item id="autovideosink" translatable="yes">autovideosink</item>
+                          <item id="ximagesink" translatable="yes">ximagesink</item>
+                        </items>
+                      </object>
+                      <packing>
+                        <property name="left_attach">1</property>
+                        <property name="top_attach">4</property>
+                      </packing>
                     </child>
                   </object>
                   <packing>
diff --git a/otrverwaltung/gui/CutinterfaceDialog.py b/otrverwaltung/gui/CutinterfaceDialog.py
index f0c4e32..95aeb92 100644
--- a/otrverwaltung/gui/CutinterfaceDialog.py
+++ b/otrverwaltung/gui/CutinterfaceDialog.py
@@ -55,10 +55,12 @@ class CutinterfaceDialog(Gtk.Dialog, Gtk.Buildable, Cut):
         self.seek_distance_default = 0
         self.seek_distance = 0
         self.clipboard = Gtk.Clipboard.get(Gdk.SELECTION_CLIPBOARD)
+        self.player_videosink = None
         # self.gst_version = Gst.version()[0] * 100 + Gst.version()[1]
 
         self.state = Gst.State.NULL
         self.player = Gst.ElementFactory.make("playbin", "playbin")
+
         if not self.player:
             self.log.error("Could not create player.")
             pass
@@ -237,6 +239,12 @@ class CutinterfaceDialog(Gtk.Dialog, Gtk.Buildable, Cut):
         self.timelines = [self.get_cuts_in_frames(self.initial_cutlist,
                                                   self.initial_cutlist_in_frames)]
 
+        videosink = self.app.config.get('general', 'videosink')
+        if videosink != 'Standard':
+            self.player_videosink = Gst.ElementFactory.make(videosink, "videosink")
+            self.player.set_property('video-sink', self.player_videosink)
+            print(videosink)
+
         # Set player uri only after discoverer is done
         self.player.set_property('uri', "file://" + self.filename)
 
@@ -745,7 +753,7 @@ class CutinterfaceDialog(Gtk.Dialog, Gtk.Buildable, Cut):
                     self.select_cut('prev')
                     return True
                 else:
-                    self.log.warn("keyname: {}".format(keyname))
+                    self.log.debug("keyname: {}".format(keyname))
 
         return False
 
diff --git a/otrverwaltung/gui/PreferencesWindow.py b/otrverwaltung/gui/PreferencesWindow.py
index 14045e6..1ad6380 100755
--- a/otrverwaltung/gui/PreferencesWindow.py
+++ b/otrverwaltung/gui/PreferencesWindow.py
@@ -42,6 +42,9 @@ class PreferencesWindow(Gtk.Window, Gtk.Buildable):
         self.builder = builder
         self.builder.connect_signals(self)
 
+    def obj(self, objectname):
+        return self.builder.get_object(objectname)
+
     def bind_config(self, config):
         self.example_filename = 'James_Bond_007_09.01.06_20-15_ard_120_TVOON_DE.mpg.HQ.avi'
         self.example_cut_filename = 'James_Bond_007_09.01.06_20-15_ard_120_TVOON_DE.mpg.HQ-cut.avi'
@@ -53,7 +56,7 @@ class PreferencesWindow(Gtk.Window, Gtk.Buildable):
                   'labelDescTrashOtrkeys',
                   'labelDescTrashAvis']
         for label in labels:
-            self.builder.get_object(label).modify_font(Pango.FontDescription("9"))
+            self.obj(label).modify_font(Pango.FontDescription("9"))
 
         ''' verschoben in die glade Datei
 
@@ -62,131 +65,132 @@ class PreferencesWindow(Gtk.Window, Gtk.Buildable):
         avidemux = ["avidemux", "avidemux2_cli"]
         virtualdub = [r"intern-vdub", r"/pfad/zu/vdub.exe"]
         smartmkvmerge = [r"SmartMKVmerge"]
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_avi'), avidemux + virtualdub + smartmkvmerge)
-        #self.gui.set_model_from_list(self.builder.get_object(''), virtualdub + smartmkvmerge)
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_mp4'), virtualdub)
+        #self.gui.set_model_from_list(self.obj('combobox_avi'), avidemux + virtualdub + smartmkvmerge)
+        #self.gui.set_model_from_list(self.obj(''), virtualdub + smartmkvmerge)
+        #self.gui.set_model_from_list(self.obj('combobox_mp4'), virtualdub)
         
         # manually
         avidemux_man = [r"avidemux3_qt4",r"avidemux2_qt4",r"avidemux2_gtk"]
         virtualdub_man = [r"intern-VirtualDub", r"/pfad/zu/VirtualDub.exe"]
         cut_interface = [r"CutInterface"]
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_man_avi'), cut_interface + avidemux_man + virtualdub_man)
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_man_hq'), cut_interface + avidemux_man + virtualdub_man)
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_man_mp4'), cut_interface + avidemux_man + virtualdub_man)
+        #self.gui.set_model_from_list(self.obj('combobox_man_avi'), cut_interface + avidemux_man + virtualdub_man)
+        #self.gui.set_model_from_list(self.obj('combobox_man_hq'), cut_interface + avidemux_man + virtualdub_man)
+        #self.gui.set_model_from_list(self.obj('combobox_man_mp4'), cut_interface + avidemux_man + virtualdub_man)
        
-        #self.gui.set_model_from_list(self.builder.get_object('comboboxServer'), ["http://cutlist.at/"])
-        #self.gui.set_model_from_list(self.builder.get_object('entry_decoder'), ['intern-otrdecoder','intern-easydecoder'])
+        #self.gui.set_model_from_list(self.obj('comboboxServer'), ["http://cutlist.at/"])
+        #self.gui.set_model_from_list(self.obj('entry_decoder'), ['intern-otrdecoder','intern-easydecoder'])
 
-        #self.gui.set_model_from_list(self.builder.get_object(''), ["ffdshow", "x264vfw", "komisar"])
+        #self.gui.set_model_from_list(self.obj(''), ["ffdshow", "x264vfw", "komisar"])
         
         # mkvmerge for ac3
         mkvmerge = ["mkvmerge", "/pfad/zu/mkvmerge"]
-        #self.gui.set_model_from_list(self.builder.get_object('combobox_ac3'), mkvmerge)
+        #self.gui.set_model_from_list(self.obj('combobox_ac3'), mkvmerge)
         
         # smartmkvmerge
         smkv_first_audio = [ 'MP3 Spur kopieren', 
                                         'MP3 nach AAC konvertieren',  
                                         'nach 2-Kanal AAC konvertieren - von AC3 wenn vorhanden',  
                                         'nach Mehr-Kanal AAC konvertieren - von AC3 wenn vorhanden']
-        #self.gui.set_model_from_list(self.builder.get_object('smkv_first_audio'), smkv_first_audio)
+        #self.gui.set_model_from_list(self.obj('smkv_first_audio'), smkv_first_audio)
         smkv_second_audio = [   'AC3 Spur kopieren', 
                                                 'AC3 Spur nach AAC konvertieren',  
                                                 'AC3 Spur entfernen']
-        #self.gui.set_model_from_list(self.builder.get_object('smkv_second_audio'), smkv_second_audio)
+        #self.gui.set_model_from_list(self.obj('smkv_second_audio'), smkv_second_audio)
         '''
 
         # If stored decoder is not in the standard list (see PreferenceWindow.glade)
         # it will be prepended and set as active entry.
         entry_list = []
-        for row in self.builder.get_object('entry_decoder').get_model():
+        for row in self.obj('entry_decoder').get_model():
             entry_list.append(row[0])
         decoder_value = self.app.config.get('programs', 'decoder')
         if not decoder_value in entry_list:
-            self.builder.get_object('entry_decoder').prepend(decoder_value, decoder_value)
-            self.builder.get_object('entry_decoder').set_active(0)
+            self.obj('entry_decoder').prepend(decoder_value, decoder_value)
+            self.obj('entry_decoder').set_active(0)
 
         # add bindings here.
-        EntryBinding(self.builder.get_object('entry_username'), self.app.config, 'general', 'cutlist_username')
-        EntryBinding(self.builder.get_object('entryEMail'), self.app.config, 'general', 'email')
-        EntryBinding(self.builder.get_object('entryPassword'), self.app.config, 'general', 'password')
-        EntryBinding(self.builder.get_object('entry_schema'), self.app.config, 'general', 'rename_schema')
-        EntryBinding(self.builder.get_object('smkv_workingdir'), self.app.config, 'smartmkvmerge', 'workingdir')
-        EntryBinding(self.builder.get_object('entry_server'), self.app.config, 'general', 'server')
+        EntryBinding(self.obj('entry_username'), self.app.config, 'general', 'cutlist_username')
+        EntryBinding(self.obj('entryEMail'), self.app.config, 'general', 'email')
+        EntryBinding(self.obj('entryPassword'), self.app.config, 'general', 'password')
+        EntryBinding(self.obj('entry_schema'), self.app.config, 'general', 'rename_schema')
+        EntryBinding(self.obj('smkv_workingdir'), self.app.config, 'smartmkvmerge', 'workingdir')
+        EntryBinding(self.obj('entry_server'), self.app.config, 'general', 'server')
        
-        SpinbuttonBinding(self.builder.get_object('spinbuttonSeeker'), self.app.config, 'general', 'seek_distance_default')
-        SpinbuttonBinding(self.builder.get_object('spinbuttonX'), self.app.config, 'general', 'cutinterface_resolution_x')
-        SpinbuttonBinding(self.builder.get_object('spinbuttonY'), self.app.config, 'general', 'cutinterface_resolution_y')
+        SpinbuttonBinding(self.obj('spinbuttonSeeker'), self.app.config, 'general', 'seek_distance_default')
+        SpinbuttonBinding(self.obj('spinbuttonX'), self.app.config, 'general', 'cutinterface_resolution_x')
+        SpinbuttonBinding(self.obj('spinbuttonY'), self.app.config, 'general', 'cutinterface_resolution_y')
 
         def rename_schema_changed(value):
             new = self.app.rename_by_schema(self.example_cut_filename, value)
-            self.builder.get_object('label_schema').set_label(
+            self.obj('label_schema').set_label(
                 "<i>%s</i> wird zu <i>%s</i>" % (self.example_filename, new))
 
         self.app.config.connect('general', 'rename_schema', rename_schema_changed)
         # "initial rename"
         # TODO: remove?
-        # rename_schema_changed(self.builder.get_object('entry_schema').get_text())
+        # rename_schema_changed(self.obj('entry_schema').get_text())
 
-        FileChooserFolderBinding(self.builder.get_object('folderNewOtrkeys'), self.app.config, 'general',
+        FileChooserFolderBinding(self.obj('folderNewOtrkeys'), self.app.config, 'general',
                                  'folder_new_otrkeys')
-        FileChooserFolderBinding(self.builder.get_object('folderTrashOtrkeys'), self.app.config, 'general',
+        FileChooserFolderBinding(self.obj('folderTrashOtrkeys'), self.app.config, 'general',
                                  'folder_trash_otrkeys')
-        FileChooserFolderBinding(self.builder.get_object('folderTrashAvis'), self.app.config, 'general',
+        FileChooserFolderBinding(self.obj('folderTrashAvis'), self.app.config, 'general',
                                  'folder_trash_avis')
-        FileChooserFolderBinding(self.builder.get_object('folderUncutAvis'), self.app.config, 'general',
+        FileChooserFolderBinding(self.obj('folderUncutAvis'), self.app.config, 'general',
                                  'folder_uncut_avis')
-        FileChooserFolderBinding(self.builder.get_object('folderCutAvis'), self.app.config, 'general',
+        FileChooserFolderBinding(self.obj('folderCutAvis'), self.app.config, 'general',
                                  'folder_cut_avis')
-        FileChooserFolderBinding(self.builder.get_object('folderArchive'), self.app.config, 'general', 'folder_archive')
+        FileChooserFolderBinding(self.obj('folderArchive'), self.app.config, 'general', 'folder_archive')
 
         for option in ['folder_new_otrkeys', 'folder_trash_otrkeys', 'folder_trash_avis', 'folder_uncut_avis',
                        'folder_cut_avis', 'folder_archive']:
             self.app.config.connect('general', option, lambda value: self.app.show_section(self.app.section))
 
-        CheckButtonBinding(self.builder.get_object('checkCorrect'), self.app.config, 'general', 'verify_decoded')
-        CheckButtonBinding(self.builder.get_object('checkPasswordCheckOnProgramStart'), self.app.config, 'general', 'no_password_hint')
-        CheckButtonBinding(self.builder.get_object('check_delete_cutlists'), self.app.config, 'general',
+        CheckButtonBinding(self.obj('checkCorrect'), self.app.config, 'general', 'verify_decoded')
+        CheckButtonBinding(self.obj('checkPasswordCheckOnProgramStart'), self.app.config, 'general', 'no_password_hint')
+        CheckButtonBinding(self.obj('check_delete_cutlists'), self.app.config, 'general',
                            'delete_cutlists')
-        CheckButtonBinding(self.builder.get_object('check_rename_cut'), self.app.config, 'general', 'rename_cut')
-        CheckButtonBinding(self.builder.get_object('check_merge_ac3'), self.app.config, 'general', 'merge_ac3s')
-        CheckButtonBinding(self.builder.get_object('check_mplayer_fullscreen'), self.app.config, 'general',
+        CheckButtonBinding(self.obj('check_rename_cut'), self.app.config, 'general', 'rename_cut')
+        CheckButtonBinding(self.obj('check_merge_ac3'), self.app.config, 'general', 'merge_ac3s')
+        CheckButtonBinding(self.obj('check_mplayer_fullscreen'), self.app.config, 'general',
                            'mplayer_fullscreen')
-        CheckButtonBinding(self.builder.get_object('check_prefer_mpv'), self.app.config, 'general', 'prefer_mpv')
-        CheckButtonBinding(self.builder.get_object('smkv_normalize'), self.app.config, 'smartmkvmerge',
+        CheckButtonBinding(self.obj('check_prefer_mpv'), self.app.config, 'general', 'prefer_mpv')
+        CheckButtonBinding(self.obj('smkv_normalize'), self.app.config, 'smartmkvmerge',
                            'normalize_audio')
-        CheckButtonBinding(self.builder.get_object('smkv_mp4'), self.app.config, 'smartmkvmerge', 'remux_to_mp4')
-        CheckButtonBinding(self.builder.get_object('check_alt_time_frame_conv'), self.app.config, 'general', 'alt_time_frame_conv')
+        CheckButtonBinding(self.obj('smkv_mp4'), self.app.config, 'smartmkvmerge', 'remux_to_mp4')
+        CheckButtonBinding(self.obj('check_alt_time_frame_conv'), self.app.config, 'general', 'alt_time_frame_conv')
 
         self.app.config.connect('general', 'rename_cut',
-                                lambda value: self.builder.get_object('entry_schema').set_sensitive(value))
+                                lambda value: self.obj('entry_schema').set_sensitive(value))
         self.app.config.connect('general', 'merge_ac3s',
-                                lambda value: self.builder.get_object('combobox_ac3').set_sensitive(value))
+                                lambda value: self.obj('combobox_ac3').set_sensitive(value))
         self.app.config.connect('general', 'merge_ac3s',
-                                lambda value: self.builder.get_object('button_set_file_ac3').set_sensitive(value))
+                                lambda value: self.obj('button_set_file_ac3').set_sensitive(value))
         self.app.config.connect('general', 'merge_ac3s',
-                                lambda value: self.builder.get_object('label_ac3').set_sensitive(value))
-
-        ComboBoxEntryBinding(self.builder.get_object('combobox_avi'), self.app.config, 'general', 'cut_avis_by')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_hq'), self.app.config, 'general', 'cut_hqs_by')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_mp4'), self.app.config, 'general', 'cut_mp4s_by')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_man_avi'), self.app.config, 'general', 'cut_avis_man_by')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_man_hq'), self.app.config, 'general', 'cut_hqs_man_by')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_man_mp4'), self.app.config, 'general', 'cut_mp4s_man_by')
-        ComboBoxEntryBinding(self.builder.get_object('h264_codec_cbox'), self.app.config, 'general', 'h264_codec')
-        ComboBoxEntryBinding(self.builder.get_object('combobox_ac3'), self.app.config, 'general', 'merge_ac3s_by')
-        ComboBoxEntryBinding(self.builder.get_object('entry_decoder'), self.app.config, 'programs', 'decoder')
-        ComboBoxEntryBinding(self.builder.get_object('smkv_first_audio'), self.app.config, 'smartmkvmerge',
+                                lambda value: self.obj('label_ac3').set_sensitive(value))
+
+        ComboBoxEntryBinding(self.obj('combobox_avi'), self.app.config, 'general', 'cut_avis_by')
+        ComboBoxEntryBinding(self.obj('combobox_hq'), self.app.config, 'general', 'cut_hqs_by')
+        ComboBoxEntryBinding(self.obj('combobox_mp4'), self.app.config, 'general', 'cut_mp4s_by')
+        ComboBoxEntryBinding(self.obj('combobox_man_avi'), self.app.config, 'general', 'cut_avis_man_by')
+        ComboBoxEntryBinding(self.obj('combobox_man_hq'), self.app.config, 'general', 'cut_hqs_man_by')
+        ComboBoxEntryBinding(self.obj('combobox_man_mp4'), self.app.config, 'general', 'cut_mp4s_man_by')
+        ComboBoxEntryBinding(self.obj('h264_codec_cbox'), self.app.config, 'general', 'h264_codec')
+        ComboBoxEntryBinding(self.obj('combobox_ac3'), self.app.config, 'general', 'merge_ac3s_by')
+        ComboBoxEntryBinding(self.obj('entry_decoder'), self.app.config, 'programs', 'decoder')
+        ComboBoxEntryBinding(self.obj('smkv_first_audio'), self.app.config, 'smartmkvmerge',
                              'first_audio_stream')
-        ComboBoxEntryBinding(self.builder.get_object('smkv_second_audio'), self.app.config, 'smartmkvmerge',
+        ComboBoxEntryBinding(self.obj('smkv_second_audio'), self.app.config, 'smartmkvmerge',
                              'second_audio_stream')
-        ComboBoxEntryBinding(self.builder.get_object('entry_cut_default'), self.app.config, 'general', 'cut_action', data='cut_default')
+        ComboBoxEntryBinding(self.obj('entry_cut_default'), self.app.config, 'general', 'cut_action', data='cut_default')
+        ComboBoxEntryBinding(self.obj('combo_videosink'), self.app.config, 'general', 'videosink')
 
-        RadioButtonsBinding([self.builder.get_object(widget) for widget in ['radio_size', 'radio_filename']],
+        RadioButtonsBinding([self.obj(widget) for widget in ['radio_size', 'radio_filename']],
                             self.app.config, 'general', 'choose_cutlists_by')
 
-        self.builder.get_object('entryPassword').set_visibility(False)
-        self.builder.get_object('entry_schema').set_sensitive(self.app.config.get('general', 'rename_cut'))
-        self.builder.get_object('combobox_ac3').set_sensitive(self.app.config.get('general', 'merge_ac3s'))
+        self.obj('entryPassword').set_visibility(False)
+        self.obj('entry_schema').set_sensitive(self.app.config.get('general', 'rename_cut'))
+        self.obj('combobox_ac3').set_sensitive(self.app.config.get('general', 'merge_ac3s'))
 
     #  Signal handlers
     
@@ -202,20 +206,20 @@ class PreferencesWindow(Gtk.Window, Gtk.Buildable):
             request_answer = r.text;
         if internet_on():
             if 'yes' in request_answer:
-                self.builder.get_object('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#008000'))
-                self.builder.get_object('OTRCredentialCheckResponse').set_markup("<span color='green'>✓</span>")
+                self.obj('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#008000'))
+                self.obj('OTRCredentialCheckResponse').set_markup("<span color='green'>✓</span>")
             else:
-                self.builder.get_object('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#c70002'))
-                self.builder.get_object('OTRCredentialCheckResponse').set_markup("<span color='red'>✘</span>")
+                self.obj('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#c70002'))
+                self.obj('OTRCredentialCheckResponse').set_markup("<span color='red'>✘</span>")
         else:
-            self.builder.get_object('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#d87107'))
-            self.builder.get_object('OTRCredentialCheckResponse').set_markup("<span color='red'>🖧 Keine Internetverbindung!</span>")
+            self.obj('checkOTRCredentials').modify_fg(Gtk.StateType.NORMAL, Gdk.color_parse('#d87107'))
+            self.obj('OTRCredentialCheckResponse').set_markup("<span color='red'>🖧 Keine Internetverbindung!</span>")
 
     def _on_button_set_file_clicked(self, entry, data=None):
         chooser = Gtk.FileChooserDialog(title="Datei auswählen",
                                         action=Gtk.FileChooserAction.OPEN,
-                                        buttons=(
-                                        Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL, Gtk.STOCK_OPEN, Gtk.ResponseType.OK))
+                                        buttons=(Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL,
+                                        Gtk.STOCK_OPEN, Gtk.ResponseType.OK))
         chooser.set_transient_for(self)
 
         if chooser.run() == Gtk.ResponseType.OK:
@@ -231,9 +235,9 @@ class PreferencesWindow(Gtk.Window, Gtk.Buildable):
     def _on_entry_decoder_changed(self, widget, data=None):
         self.log.debug("Function start")
         if 'otrtool' in widget.get_active_text():
-            self.builder.get_object('checkCorrect').set_sensitive(False)
+            self.obj('checkCorrect').set_sensitive(False)
         else:
-            self.builder.get_object('checkCorrect').set_sensitive(True)
+            self.obj('checkCorrect').set_sensitive(True)
 
     def _on_preferences_buttonClose_clicked(self, widget, data=None):
         self.hide()
